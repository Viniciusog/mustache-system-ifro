package view;

import javax.swing.JOptionPane;

import model.Role;
import dao.RoleDAO;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class RoleRegisterView extends javax.swing.JDialog {

    /**
     * Creates new form RoleRegisterView
     */
    public RoleRegisterView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        btnUpdate.setVisible(false);
        buildTable("");
        jLabel3.setVisible(false);
        jTextField1.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        editName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        ckOpenCashier = new javax.swing.JCheckBox();
        ckPayBills = new javax.swing.JCheckBox();
        ckAddRole = new javax.swing.JCheckBox();
        ckAddService = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        ckWithdraw = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        ckProduct = new javax.swing.JCheckBox();
        ckBrands = new javax.swing.JCheckBox();
        ckSupplier = new javax.swing.JCheckBox();
        ckReceiveBills = new javax.swing.JCheckBox();
        ckSell = new javax.swing.JCheckBox();
        ckAddPerson = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        ckAddReceivement = new javax.swing.JCheckBox();
        ckReceive = new javax.swing.JCheckBox();
        ckBuyProduct = new javax.swing.JCheckBox();
        ckDeposit = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ckUseReport = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        editSearch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRole = new javax.swing.JTable();
        btnNew = new javax.swing.JButton();
        EditBt = new javax.swing.JButton();
        DeleteBt = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        editId.setEditable(false);
        editId.setBorder(null);
        editId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editIdActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cargos");
        setResizable(false);

        jTabbedPane4.setBackground(new java.awt.Color(40, 40, 40));
        jTabbedPane4.setForeground(new java.awt.Color(30, 30, 30));
        jTabbedPane4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jTabbedPane4.setOpaque(true);

        jPanel1.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(null);

        editName.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jPanel3.add(editName);
        editName.setBounds(300, 80, 300, 32);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("NOME DO CARGO");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(300, 60, 120, 20);

        btnSave.setBackground(new java.awt.Color(99, 154, 103));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Salvar");
        btnSave.setBorder(null);
        btnSave.setBorderPainted(false);
        btnSave.setFocusPainted(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel3.add(btnSave);
        btnSave.setBounds(810, 530, 120, 40);

        btnCancel.setBackground(new java.awt.Color(200, 76, 88));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancelar");
        btnCancel.setBorder(null);
        btnCancel.setBorderPainted(false);
        btnCancel.setFocusPainted(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel3.add(btnCancel);
        btnCancel.setBounds(650, 530, 120, 40);

        btnUpdate.setBackground(new java.awt.Color(99, 154, 103));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Atualizar");
        btnUpdate.setBorder(null);
        btnUpdate.setBorderPainted(false);
        btnUpdate.setFocusPainted(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdate);
        btnUpdate.setBounds(790, 70, 142, 40);

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jPanel3.add(jTextField1);
        jTextField1.setBounds(110, 80, 170, 32);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(110, 60, 30, 20);

        jPanel5.setBackground(new java.awt.Color(60, 60, 60));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CARGOS");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jPanel3.add(jPanel5);
        jPanel5.setBounds(0, 0, 970, 50);

        jPanel6.setBackground(new java.awt.Color(60, 60, 60));

        ckOpenCashier.setBackground(new java.awt.Color(60, 60, 60));
        ckOpenCashier.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckOpenCashier.setForeground(new java.awt.Color(255, 255, 255));
        ckOpenCashier.setText("ABRIR CAIXA");
        ckOpenCashier.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckOpenCashier.setContentAreaFilled(false);
        ckOpenCashier.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckOpenCashier.setFocusPainted(false);

        ckPayBills.setBackground(new java.awt.Color(60, 60, 60));
        ckPayBills.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckPayBills.setForeground(new java.awt.Color(255, 255, 255));
        ckPayBills.setText("REALIZAR PAGAMENTO DE CONTAS");
        ckPayBills.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckPayBills.setContentAreaFilled(false);
        ckPayBills.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckPayBills.setFocusPainted(false);

        ckAddRole.setBackground(new java.awt.Color(60, 60, 60));
        ckAddRole.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckAddRole.setForeground(new java.awt.Color(255, 255, 255));
        ckAddRole.setText("CADASTRAR CARGOS");
        ckAddRole.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckAddRole.setContentAreaFilled(false);
        ckAddRole.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckAddRole.setFocusPainted(false);

        ckAddService.setBackground(new java.awt.Color(60, 60, 60));
        ckAddService.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckAddService.setForeground(new java.awt.Color(255, 255, 255));
        ckAddService.setText("CADASTRAR SERVIÇO");
        ckAddService.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckAddService.setContentAreaFilled(false);
        ckAddService.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckAddService.setFocusPainted(false);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Recebimentos");

        ckWithdraw.setBackground(new java.awt.Color(60, 60, 60));
        ckWithdraw.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckWithdraw.setForeground(new java.awt.Color(255, 255, 255));
        ckWithdraw.setText("SANGRIA");
        ckWithdraw.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckWithdraw.setContentAreaFilled(false);
        ckWithdraw.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckWithdraw.setFocusPainted(false);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Cadastros");

        ckProduct.setBackground(new java.awt.Color(60, 60, 60));
        ckProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckProduct.setForeground(new java.awt.Color(255, 255, 255));
        ckProduct.setText("CADASTRAR PRODUTO");
        ckProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckProduct.setContentAreaFilled(false);
        ckProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckProduct.setFocusPainted(false);

        ckBrands.setBackground(new java.awt.Color(60, 60, 60));
        ckBrands.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckBrands.setForeground(new java.awt.Color(255, 255, 255));
        ckBrands.setText("CADASTRAR MARCAS");
        ckBrands.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckBrands.setContentAreaFilled(false);
        ckBrands.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckBrands.setFocusPainted(false);

        ckSupplier.setBackground(new java.awt.Color(60, 60, 60));
        ckSupplier.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckSupplier.setForeground(new java.awt.Color(255, 255, 255));
        ckSupplier.setText("CADASTRAR FORNECEDOR");
        ckSupplier.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckSupplier.setContentAreaFilled(false);
        ckSupplier.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckSupplier.setFocusPainted(false);

        ckReceiveBills.setBackground(new java.awt.Color(60, 60, 60));
        ckReceiveBills.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckReceiveBills.setForeground(new java.awt.Color(255, 255, 255));
        ckReceiveBills.setText("RECEBER CONTAS");
        ckReceiveBills.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckReceiveBills.setContentAreaFilled(false);
        ckReceiveBills.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckReceiveBills.setFocusPainted(false);
        ckReceiveBills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckReceiveBillsActionPerformed(evt);
            }
        });

        ckSell.setBackground(new java.awt.Color(60, 60, 60));
        ckSell.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckSell.setForeground(new java.awt.Color(255, 255, 255));
        ckSell.setText("REALIZAR VENDA");
        ckSell.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckSell.setContentAreaFilled(false);
        ckSell.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckSell.setFocusPainted(false);
        ckSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckSellActionPerformed(evt);
            }
        });

        ckAddPerson.setBackground(new java.awt.Color(60, 60, 60));
        ckAddPerson.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckAddPerson.setForeground(new java.awt.Color(255, 255, 255));
        ckAddPerson.setText("CADASTRAR PESSOAS");
        ckAddPerson.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckAddPerson.setContentAreaFilled(false);
        ckAddPerson.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckAddPerson.setFocusPainted(false);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Permissões");

        ckAddReceivement.setBackground(new java.awt.Color(60, 60, 60));
        ckAddReceivement.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckAddReceivement.setForeground(new java.awt.Color(255, 255, 255));
        ckAddReceivement.setText("CADASTRAR RECEBIMENTO");
        ckAddReceivement.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckAddReceivement.setContentAreaFilled(false);
        ckAddReceivement.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckAddReceivement.setFocusPainted(false);

        ckReceive.setBackground(new java.awt.Color(60, 60, 60));
        ckReceive.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckReceive.setForeground(new java.awt.Color(255, 255, 255));
        ckReceive.setText("RECEBER");
        ckReceive.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckReceive.setContentAreaFilled(false);
        ckReceive.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckReceive.setFocusPainted(false);

        ckBuyProduct.setBackground(new java.awt.Color(60, 60, 60));
        ckBuyProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckBuyProduct.setForeground(new java.awt.Color(255, 255, 255));
        ckBuyProduct.setText("REALIZAR COMPRA DE PRODUTO");
        ckBuyProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckBuyProduct.setContentAreaFilled(false);
        ckBuyProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckBuyProduct.setFocusPainted(false);

        ckDeposit.setBackground(new java.awt.Color(60, 60, 60));
        ckDeposit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckDeposit.setForeground(new java.awt.Color(255, 255, 255));
        ckDeposit.setText("REALIZAR DEPÓSITO");
        ckDeposit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckDeposit.setContentAreaFilled(false);
        ckDeposit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckDeposit.setFocusPainted(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Caixa");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Relatórios");

        ckUseReport.setBackground(new java.awt.Color(60, 60, 60));
        ckUseReport.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckUseReport.setForeground(new java.awt.Color(255, 255, 255));
        ckUseReport.setText("IMPRIMIR RELATÓRIO");
        ckUseReport.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        ckUseReport.setContentAreaFilled(false);
        ckUseReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckUseReport.setFocusPainted(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(373, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(347, 347, 347))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckUseReport, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ckAddRole, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(ckReceive, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ckDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(ckSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(ckReceiveBills, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(ckBuyProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(ckBrands, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(270, 270, 270)
                            .addComponent(ckPayBills, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(ckAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(270, 270, 270)
                            .addComponent(ckSell, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(ckProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(270, 270, 270)
                            .addComponent(ckWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(ckAddReceivement, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(270, 270, 270)
                            .addComponent(ckOpenCashier, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ckAddService, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(148, 148, 148)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckUseReport, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 69, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jLabel8)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ckAddRole, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ckReceive, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ckDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(3, 3, 3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ckSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ckReceiveBills, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ckBuyProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(3, 3, 3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ckBrands, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ckPayBills, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(3, 3, 3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ckAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ckSell, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(3, 3, 3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ckProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ckWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(3, 3, 3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ckAddReceivement, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ckOpenCashier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(3, 3, 3)
                    .addComponent(ckAddService, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 4, Short.MAX_VALUE)))
        );

        jPanel3.add(jPanel6);
        jPanel6.setBounds(60, 140, 850, 370);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 0, 960, 610);

        jTabbedPane4.addTab("CADASTRAR CARGOS", jPanel1);

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setLayout(null);

        editSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSearchActionPerformed(evt);
            }
        });
        editSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                editSearchKeyTyped(evt);
            }
        });
        jPanel4.add(editSearch);
        editSearch.setBounds(520, 70, 287, 35);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/baseline_search_white_18dp.png"))); // NOI18N
        jPanel4.add(jLabel6);
        jLabel6.setBounds(810, 70, 48, 33);

        tableRole.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tableRole.setForeground(new java.awt.Color(51, 51, 51));
        tableRole.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome do Cargo", "Permissão Pagar Contas", "Permissão Receber Conta", "Cadastrar Marca", "Comprar", "Depositar no Caixa", "Abrir Caixa", "Sangria", "Recebimento", "Cadastrar Pessoa", "Cadastrar Fornecedor", "Cadastrar Produto", "Receber", "Cadastrar Cargo", "Vender", "Cadastrar Serviço", "Imprimir Relatório"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableRole);

        jPanel4.add(jScrollPane2);
        jScrollPane2.setBounds(10, 120, 940, 460);

        btnNew.setBackground(new java.awt.Color(99, 154, 103));
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/baseline_add_white_18dp.png"))); // NOI18N
        btnNew.setBorderPainted(false);
        btnNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNew.setFocusPainted(false);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jPanel4.add(btnNew);
        btnNew.setBounds(60, 70, 48, 33);

        EditBt.setBackground(new java.awt.Color(87, 126, 244));
        EditBt.setForeground(new java.awt.Color(255, 255, 255));
        EditBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/baseline_edit_white_18dp.png"))); // NOI18N
        EditBt.setBorderPainted(false);
        EditBt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EditBt.setFocusPainted(false);
        EditBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBtActionPerformed(evt);
            }
        });
        jPanel4.add(EditBt);
        EditBt.setBounds(130, 70, 48, 33);

        DeleteBt.setBackground(new java.awt.Color(200, 76, 88));
        DeleteBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/baseline_delete_white_18dp.png"))); // NOI18N
        DeleteBt.setBorderPainted(false);
        DeleteBt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteBt.setFocusPainted(false);
        DeleteBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtActionPerformed(evt);
            }
        });
        jPanel4.add(DeleteBt);
        DeleteBt.setBounds(200, 70, 48, 33);

        jPanel7.setBackground(new java.awt.Color(40, 40, 40));
        jPanel7.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("LISTAR CARGOS");
        jPanel7.add(jLabel2);
        jLabel2.setBounds(390, 10, 200, 20);

        jPanel4.add(jPanel7);
        jPanel7.setBounds(0, 0, 960, 40);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("LISTAR CARGOS", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editIdActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        saveRole();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        editName.setText(null);
        ckPayBills.setSelected(false);
        ckBrands.setSelected(false);
        ckBuyProduct.setSelected(false);
        ckReceiveBills.setSelected(false);
        ckDeposit.setSelected(false);
        ckOpenCashier.setSelected(false);
        ckAddReceivement.setSelected(false);
        ckWithdraw.setSelected(false);
        ckProduct.setSelected(false);
        ckAddPerson.setSelected(false);
        ckSupplier.setSelected(false);
        ckAddService.setSelected(false);
        ckReceive.setSelected(false);
        ckAddRole.setSelected(false);
        ckSell.setSelected(false);
        ckUseReport.setSelected(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void editSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSearchActionPerformed

    }//GEN-LAST:event_editSearchActionPerformed

    private void editSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editSearchKeyTyped
        buildTable(editSearch.getText());
    }//GEN-LAST:event_editSearchKeyTyped

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        jTabbedPane4.setSelectedIndex(0);
        editName.setFocusable(true);
    }//GEN-LAST:event_btnNewActionPerformed

    private void EditBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBtActionPerformed
        Role role = new Role();
        int selectedRow = tableRole.getSelectedRow();
        if (selectedRow >= 0) {
            editName.setText(tableRole.getValueAt(selectedRow, 1).toString());
            editId.setText(tableRole.getValueAt(selectedRow, 0).toString());
            jLabel5.setVisible(true);
            editName.setVisible(true);
            btnSave.setVisible(false);
            btnUpdate.setVisible(true);
            jTabbedPane4.setSelectedIndex(0);
            editId.setEditable(false);

            if (tableRole.getValueAt(selectedRow, 2).equals(true)) {
                ckPayBills.setSelected(true);
            } else {
                ckPayBills.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 3).equals(true)) {
                ckReceiveBills.setSelected(true);
            } else {
                ckReceiveBills.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 4).equals(true)) {
                ckBrands.setSelected(true);
            } else {
                ckBrands.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 5).equals(true)) {
                ckDeposit.setSelected(true);
            } else {
                ckDeposit.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 6).equals(true)) {
                ckBuyProduct.setSelected(true);
            } else {
                ckBuyProduct.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 7).equals(true)) {
                ckOpenCashier.setSelected(true);
            } else {
                ckOpenCashier.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 8).equals(true)) {
                ckWithdraw.setSelected(true);
            } else {
                ckWithdraw.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 9).equals(true)) {
                ckAddReceivement.setSelected(true);
            } else {
                ckAddReceivement.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 10).equals(true)) {
                ckAddPerson.setSelected(true);
            } else {
                ckAddPerson.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 11).equals(true)) {
                ckSupplier.setSelected(true);
            } else {
                ckSupplier.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 12).equals(true)) {
                ckProduct.setSelected(true);
            } else {
                ckProduct.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 13).equals(true)) {
                ckReceive.setSelected(true);
            } else {
                ckReceive.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 14).equals(true)) {
                ckAddRole.setSelected(true);
            } else {
                ckAddRole.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 15).equals(true)) {
                ckSell.setSelected(true);
            } else {
                ckSell.setSelected(false);
            }

            if (tableRole.getValueAt(selectedRow, 16).equals(true)) {
                ckAddService.setSelected(true);
            } else {
                ckAddService.setSelected(false);
            }
            
            if (tableRole.getValueAt(selectedRow, 17).equals(true)) {
                ckUseReport.setSelected(true);
            } else {
                ckUseReport.setSelected(false);
            }
            

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um item da tabela!");
        }
    }//GEN-LAST:event_EditBtActionPerformed

    private void DeleteBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtActionPerformed
        int selectedRow = tableRole.getSelectedRow();
        if (selectedRow >= 0) {
            Role role = new Role();
            role.setId(Integer.parseInt(tableRole.getValueAt(selectedRow, 0).toString()));
            RoleDAO.delete(role);
            buildTable("");
            jTabbedPane4.setSelectedIndex(1);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um item da tabela!");
        }
    }//GEN-LAST:event_DeleteBtActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
         Role role = new Role();
        role.setName(editName.getText());
        role.setId(Integer.parseInt(editId.getText()));

        if (ckPayBills.isSelected()) {
            role.setPayBill(true);
        } else {
            role.setPayBill(false);
        }

        if (ckReceiveBills.isSelected()) {
            role.setReceiveBill(true);
        } else {
            role.setReceiveBill(false);
        }

        if (ckBrands.isSelected()) {
            role.setAddBrand(true);
        } else {
            role.setAddBrand(false);
        }

        if (ckDeposit.isSelected()) {
            role.setDepositCashier(true);
        } else {
            role.setDepositCashier(false);
        }

        if (ckBuyProduct.isSelected()) {
            role.setBuy(true);
        } else {
            role.setBuy(false);
        }

        if (ckOpenCashier.isSelected()) {
            role.setOpenCashier(true);
        } else {
            role.setOpenCashier(false);
        }

        if (ckWithdraw.isSelected()) {
            role.setWithdrawCashier(true);
        } else {
            role.setWithdrawCashier(false);
        }

        if (ckAddReceivement.isSelected()) {
            role.setAddReceivement(true);
        } else {
            role.setAddReceivement(false);
        }

        if (ckAddPerson.isSelected()) {
            role.setAddPerson(true);
        } else {
            role.setAddPerson(false);
        }

        if (ckSupplier.isSelected()) {
            role.setAddSupplier(true);
        } else {
            role.setAddSupplier(false);
        }

        if (ckProduct.isSelected()) {
            role.setAddProd(true);
        } else {
            role.setAddProd(false);
        }

        if (ckReceive.isSelected()) {
            role.setReceive(true);
        } else {
            role.setReceive(false);
        }

        if (ckAddRole.isSelected()) {
            role.setAddRole(true);
        } else {
            role.setAddRole(false);
        }

        if (ckSell.isSelected()) {
            role.setSell(true);
        } else {
            role.setSell(false);
        }

        if (ckAddService.isSelected()) {
            role.setAddServ(true);
        } else {
            role.setAddServ(false);
        }
        
        if (ckUseReport.isSelected()) {
            role.setUseReport(true);
        } else {
            role.setUseReport(false);
        }
        

        RoleDAO.update(role);
        buildTable("");
        jTabbedPane4.setSelectedIndex(1);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void ckSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckSellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckSellActionPerformed

    private void ckReceiveBillsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckReceiveBillsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckReceiveBillsActionPerformed
    private void saveRole(){
        if (!verifyValuesIfItsNotEmpty()) {
            if (ckPayBills.isSelected() == false && ckReceiveBills.isSelected() == false && ckBrands.isSelected() == false && ckDeposit.isSelected() == false && ckBuyProduct.isSelected() == false && ckOpenCashier.isSelected() == false && ckWithdraw.isSelected() == false && ckAddReceivement.isSelected() == false && ckAddPerson.isSelected() == false && ckSupplier.isSelected() == false && ckProduct.isSelected() == false && ckReceive.isSelected() == false && ckAddRole.isSelected() == false && ckSell.isSelected() == false && ckUseReport.isSelected() == false) {
                JOptionPane.showMessageDialog(rootPane, "Coloque ao menos uma permissão no cargo", null, JOptionPane.WARNING_MESSAGE);
            } else {
                Role role = new Role();
                role.setName(editName.getText());

                if (ckPayBills.isSelected()) {
                    role.setPayBill(true);
                } else {
                    role.setPayBill(false);
                }

                if (ckReceiveBills.isSelected()) {
                    role.setReceiveBill(true);
                } else {
                    role.setReceiveBill(false);
                }

                if (ckBrands.isSelected()) {
                    role.setAddBrand(true);
                } else {
                    role.setAddBrand(false);
                }

                if (ckDeposit.isSelected()) {
                    role.setDepositCashier(true);
                } else {
                    role.setDepositCashier(false);
                }

                if (ckBuyProduct.isSelected()) {
                    role.setBuy(true);
                } else {
                    role.setBuy(false);
                }

                if (ckOpenCashier.isSelected()) {
                    role.setOpenCashier(true);
                } else {
                    role.setOpenCashier(false);
                }

                if (ckWithdraw.isSelected()) {
                    role.setWithdrawCashier(true);
                } else {
                    role.setWithdrawCashier(false);
                }

                if (ckAddReceivement.isSelected()) {
                    role.setAddReceivement(true);
                } else {
                    role.setAddReceivement(false);
                }

                if (ckAddPerson.isSelected()) {
                    role.setAddPerson(true);
                } else {
                    role.setAddPerson(false);
                }

                if (ckSupplier.isSelected()) {
                    role.setAddSupplier(true);
                } else {
                    role.setAddSupplier(false);
                }

                if (ckProduct.isSelected()) {
                    role.setAddProd(true);
                } else {
                    role.setAddProd(false);
                }

                if (ckReceive.isSelected()) {
                    role.setReceive(true);
                } else {
                    role.setReceive(false);
                }

                if (ckAddRole.isSelected()) {
                    role.setAddRole(true);
                } else {
                    role.setAddRole(false);
                }

                if (ckSell.isSelected()) {
                    role.setSell(true);
                } else {
                    role.setSell(false);
                }

                if (ckAddService.isSelected()) {
                    role.setAddServ(true);
                } else {
                    role.setAddServ(false);
                }
        
                if (ckUseReport.isSelected()) {
                    role.setUseReport(true);
                } else {
                 role.setUseReport(false);
                }

                RoleDAO.insert(role);
                buildTable("");
                jTabbedPane4.setSelectedIndex(1);
            
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Algum campo está em branco", null, JOptionPane.WARNING_MESSAGE);
        }    
    }
    
    
    
    private boolean verifyValuesIfItsNotEmpty() {
        boolean haveEmptyValue = false;
        
        if (editName.getText().isEmpty()) {
            haveEmptyValue = true;
        }
        return haveEmptyValue;
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoleRegisterView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoleRegisterView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoleRegisterView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoleRegisterView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RoleRegisterView dialog = new RoleRegisterView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void buildTable(String name) {
        RoleDAO RoleDAO = new RoleDAO();
        List<Role> list = RoleDAO.getListRole(name);
        DefaultTableModel tableModel = (DefaultTableModel) tableRole.getModel();
        tableModel.setRowCount(0);
        
        for (Role role : list) {
            tableModel.addRow(new Object[]{
                role.getId(),
                role.getName(),
                role.isPayBill(),
                role.isReceiveBill(),
                role.isAddBrand(),
                role.isBuy(),
                role.isDepositCashier(),
                role.isOpenCashier(),
                role.isWithdrawCashier(),
                role.isAddReceivement(),
                role.isAddPerson(),
                role.isAddSupplier(),
                role.isAddProd(),
                role.isReceive(),
                role.isAddRole(),
                role.isSell(),
                role.isAddServ()
            });
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBt;
    private javax.swing.JButton EditBt;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox ckAddPerson;
    private javax.swing.JCheckBox ckAddReceivement;
    private javax.swing.JCheckBox ckAddRole;
    private javax.swing.JCheckBox ckAddService;
    private javax.swing.JCheckBox ckBrands;
    private javax.swing.JCheckBox ckBuyProduct;
    private javax.swing.JCheckBox ckDeposit;
    private javax.swing.JCheckBox ckOpenCashier;
    private javax.swing.JCheckBox ckPayBills;
    private javax.swing.JCheckBox ckProduct;
    private javax.swing.JCheckBox ckReceive;
    private javax.swing.JCheckBox ckReceiveBills;
    private javax.swing.JCheckBox ckSell;
    private javax.swing.JCheckBox ckSupplier;
    private javax.swing.JCheckBox ckUseReport;
    private javax.swing.JCheckBox ckWithdraw;
    private javax.swing.JTextField editId;
    private javax.swing.JTextField editName;
    private javax.swing.JTextField editSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tableRole;
    // End of variables declaration//GEN-END:variables
}
